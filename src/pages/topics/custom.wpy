<script>
import _ from 'lodash'
import wepy from 'wepy'
import utils from '@/utils'
import api from '@/utils/api'
import filter from '../../wxs/filter.wxs'
import inputMixin from '@/mixins/input';
import minuiMixin from '@/mixins/minui';
import commonMixin from '@/mixins/common'
import loadmore from '@/components/loadmore'
import ctselector from '@/components/custom/selector'

const devWidth = 750
const winWidth = wepy.getSystemInfoSync().windowWidth
const winRatio = winWidth / devWidth

import { getStore, connect } from 'wepy-redux'
import { addShopCart, setShopBuyList } from '@/store/actions'
const store = getStore()

export default class CustomTopics extends wepy.page {
    config = {
        usingComponents: {
            'wxc-cc': '/packages/@minui/wxc-cc/dist/index',
            'wxc-flex': '/packages/@minui/wxc-flex/dist/index',
            'wxc-avatar': '/packages/@minui/wxc-avatar/dist/index',
            'wxc-elip': '/packages/@minui/wxc-elip/dist/index',
            'wxc-icon': '/packages/@minui/wxc-icon/dist/index',
            'wxc-label': '/packages/@minui/wxc-label/dist/index',
            'wxc-loadmore': '/packages/@minui/wxc-loadmore/dist/index',

            'wxc-abnor': '/packages/@minui/wxc-abnor/dist/index',
            'wxc-countdown': '/packages/@minui/wxc-countdown/dist/index',
            'wxc-counter': '/packages/@minui/wxc-counter/dist/index',
            'wxc-loading': '/packages/@minui/wxc-loading/dist/index',
            'wxc-mask': '/packages/@minui/wxc-mask/dist/index',

            'wxc-dialog': '/packages/@minui/wxc-dialog/dist/index',
            'wxc-popup': '/packages/@minui/wxc-popup/dist/index',
            'wxc-toast': '/packages/@minui/wxc-toast/dist/index'
        },
        enablePullDownRefresh: true
    }

    components = {
        loadmore,
        ctselector
    }

    mixins = [inputMixin, minuiMixin, commonMixin]

    wxs = {
        filter
    }

    data = {
        preloaded: false,
        isloading: false,
        materialList: null,
        shapeList: null,
        packageList: null,
        capacityList: null,
        specList: null,
        nefiList: null,
        coverList: null,
        currentList: null,
        currentData: null,
        customInfo: {
            count: 1,
            material: null,
            shape: null,
            package: null,
            capacity: null,
            spec: null,
            nefi: null,
            cover: null,
            nefitext: null,
            covertext: null,
        },

    }

    computed = {
        unitPrice(){
            try{
                return this.customInfo.material.price|| '0.00'
            } catch(e){
                return '0.00'
            }
        },
        totalPrice(){
            try{
                return (this.unitPrice * this.customInfo.count).toFixed(2) || '0.00'
            } catch(e){
                return '0.00'
            }
        },
        optimize() {
            let width = Math.ceil(((devWidth - 20*3) / 2) * winRatio);
            return width + 'x' + width;
        }
    }

    methods = {
        tap() {},
        onSelectMaterial(item) {
            this.materialList = this.materialList.map(n => {
                n.checked = !!(n.id == item.id);
                return n;
            });
            this.customInfo.material = this.materialList.find(n => n.checked);
        },
        onPickerChange(e) {
            const { name } = e.currentTarget.dataset;
            let currentList = [];
            switch (name) {
                case "capacity": currentList = this.capacityList; break;
                case "spec": currentList = this.specList; break;
            }
            this.customInfo[name] = currentList[e.detail.value];
        },
        onSelectorShow(name) {
            this.currentName = name;
            this.currentData = null;
            switch (name) {
                case "shape": this.currentList = this.shapeList; break;
                case "package": this.currentList = this.packageList; break;
                case "nefi": this.currentList = this.nefiList; break;
                case "cover": this.currentList = this.coverList; break;
            }
            this.currentData = this.customInfo[name];
            this.$broadcast('showCustomSelector');
        },
        onSelectorSubmit(data){
            this.customInfo[this.currentName] = _.cloneDeep(data);
        },
        onCounterChange(e){
            const { number } = e.detail;

            this.customInfo.count = number;

        },
        onReset() {
            this.materialList = this.materialList.map(n => {
                n.checked = false;
                return n;
            });
            this.shapeList = this.shapeList.map(n => {
                n.checked = false;
                return n;
            });
            this.packageList = this.packageList.map(n => {
                n.checked = false;
                return n;
            });
            this.capacityList = this.capacityList.map(n => {
                n.checked = false;
                return n;
            });
            this.specList = this.specList.map(n => {
                n.checked = false;
                return n;
            });
            this.currentList = null;
            this.currentData = null;
            this.customInfo = {
                count: 1,
                material: null,
                shape: null,
                package: null,
                capacity: null,
                spec: null,
                nefi: null,
                cover: null,
                nefitext: null,
                covertext: null
            }
        },
        async onSubmit() {

            if (!this.customInfo.material) {
                utils.showToast('请选择茶叶毛料');
                return;
            }
            if (!this.customInfo.shape) {
                utils.showToast('请选择压制造型');
                return;
            }
            if (!this.customInfo.package) {
                utils.showToast('请选择包装盒');
                return;
            }
            if (!this.customInfo.capacity) {
                utils.showToast('请选择容量');
                return;
            }
            if (!this.customInfo.spec) {
                utils.showToast('请选择规格');
                return;
            }
            if (!this.customInfo.nefi) {
                utils.showToast('请选择内菲');
                return;
            }
            if (!this.customInfo.nefitext) {
                utils.showToast('请填写内菲留言');
                return;
            }
            if (!this.customInfo.cover) {
                utils.showToast('请选择封面');
                return;
            }
            if (!this.customInfo.covertext) {
                utils.showToast('请填写封面留言');
                return;
            }

            let custom = {
                materialid: this.customInfo.material.id,
                shapeid: this.customInfo.shape.id,
                packageid: this.customInfo.package.id,
                capacityid: this.customInfo.capacity.id,
                specid: this.customInfo.spec.id,
                nefiid: this.customInfo.nefi.id,
                nefitext: this.customInfo.nefitext,
                coverid: this.customInfo.cover.id,
                covertext: this.customInfo.covertext,
                count: this.customInfo.count,
            }

            let { materialid, shapeid, packageid, capacityid, specid, nefiid, coverid } = custom;
            let uid = wepy.$instance.globalData.uid;

            let sid = `${materialid}${shapeid}${packageid}${capacityid}${specid}${nefiid}${coverid}-${uid}`;

            let products = {
                id: materialid,
                sid: sid,
                uid: uid,
                type: 2,
                cover: this.customInfo.material.cover,
                title: this.customInfo.material.title,
                price: this.customInfo.material.price,
                count: this.customInfo.count,
                stock: 99999,
                skuAttrText: `压制:${this.customInfo.shape.title}, 包装:${this.customInfo.package.title}, 容量:${this.customInfo.capacity.title}, 规格:${this.customInfo.spec.title}, 菲页:${this.customInfo.nefi.title}, 菲页文字:${this.customInfo.nefitext}, 封面:${this.customInfo.cover.title}, 封面文字:${this.customInfo.covertext}`,
                custom: custom
            };

            await store.dispatch(addShopCartList(products)).then(res => {
                wepy.navigateTo({
                    url: '/pages/product/shopcart'
                });
            });
        }
    }

    events = {
        showPopupSelect() {
            let popup = this.$wxpage.selectComponent('.J_Popup_Select');
            popup && popup.show();
        },
        hidePopupSelect() {
            let popup = this.$wxpage.selectComponent('.J_Popup_Select');
            popup && popup.hide();
        }
    }

    async getInitialData(){
        await utils.request(api.topics.custom).then(({ result }) => {
            this.materialList = result.materialList;
            this.shapeList = result.shapeList;
            this.packageList = result.packageList;
            this.capacityList = result.capacityList;
            this.specList = result.specList;
            this.nefiList = result.nefiList;
            this.coverList = result.coverList;
        }).catch(e=>{});
        this.$apply();
    }

    async onLoad(option) {
        await this.getInitialData();
        this.preloaded = true;
        this.$apply();
    }

    async onPullDownRefresh() {
        //下拉刷新数据
        console.log('下拉刷新数据');
        await this.getInitialData();
        wepy.stopPullDownRefresh()
    }
}

</script>
<template>
<block wx:if="{{preloaded}}">
    <view class="dzui-cells material">
        <view class="dzui-cells-head">
            <view class="custom-title">马上定制</view>
            <view class="custom-text">选择下面的选项定制属于您的普洱茶</view>
        </view>
        <view class="dzui-cells-lead">来自各普洱茶区的上好茶叶毛料</view>
        <view class="dzui-cells-body">
            <repeat for="{{materialList}}" item="item">
                <view class="custom-product" @tap.stop="onSelectMaterial({{item}})">
                    <text class="checkbox icon icon-checkbox{{ item.checked ? '-cur': '' }}"></text>
                    <view class="custom-product-cover">
                        <image src="{{filter.thumbnail(item.cover,optimize)}}" mode="scaleToFill"></image>
                    </view>
                    <wxc-elip class="custom-product-title">{{item.title}}</wxc-elip>
                    <wxc-elip class="custom-product-price">市场价：{{item.price}}元/斤</wxc-elip>
                </view>
            </repeat>
        </view>
    </view>
    <view class="dzui-cells attribute">
        <view class="dzui-cell">
            <view class="dzui-cell-head">选择压制造型：</view>
            <view class="dzui-cell-body" @tap="onSelectorShow('shape')">
                <text class="dzui-cell-text">{{customInfo.shape.title}}</text>
            </view>
            <view class="dzui-cell-foot">
                <text class="icon icon-arrow-right"></text>
            </view>
        </view>
        <view class="dzui-cell">
            <view class="dzui-cell-head">选择盒子包装：</view>
            <view class="dzui-cell-body" @tap="onSelectorShow('package')">
                <text class="dzui-cell-text">{{customInfo.package.title}}</text>
            </view>
            <view class="dzui-cell-foot">
                <text class="icon icon-arrow-right"></text>
            </view>
        </view>
        <!-- <view class="dzui-cell"> -->
        <view class="dzui-cell">
            <view class="dzui-cell-head">选择容量：</view>
            <picker class="dzui-cell-body" bindchange="onPickerChange" data-name="capacity" value="{{index}}" range-key="title" range="{{capacityList}}">
                <text class="dzui-cell-text">{{customInfo.capacity.title}}</text>
            </picker>
            <view class="dzui-cell-foot">
                <text class="icon icon-arrow-right"></text>
            </view>
        </view>
        <view class="dzui-cell">
            <view class="dzui-cell-head">选择规格：</view>
            <picker class="dzui-cell-body" bindchange="onPickerChange" data-name="spec" value="{{index}}" range-key="title" range="{{specList}}">
                <text class="dzui-cell-text">{{customInfo.spec.title}}</text>
            </picker>
            <view class="dzui-cell-foot">
                <text class="icon icon-arrow-right"></text>
            </view>
        </view>
        <view class="dzui-cell">
            <view class="dzui-cell-head">选择内菲：</view>
            <view class="dzui-cell-body" @tap="onSelectorShow('nefi')">
                <text class="dzui-cell-text">{{customInfo.nefi.title}}</text>
            </view>
            <view class="dzui-cell-foot">
                <text class="icon icon-arrow-right"></text>
            </view>
        </view>
        <view class="dzui-cell" wx:if="{{customInfo.nefi}}">
            <view class="dzui-cell-head">内菲留言：</view>
            <view class="dzui-cell-body">
                <input value="{{customInfo.nefitext}}" bindinput="input" bindblur="input" data-store="customInfo.nefitext" />
            </view>
        </view>
        <view class="dzui-cell">
            <view class="dzui-cell-head">选择封面：</view>
            <view class="dzui-cell-body" @tap="onSelectorShow('cover')">
                <text class="dzui-cell-text">{{customInfo.cover.title}}</text>
            </view>
            <view class="dzui-cell-foot">
                <text class="icon icon-arrow-right"></text>
            </view>
        </view>
        <view class="dzui-cell" wx:if="{{customInfo.cover}}">
            <view class="dzui-cell-head">封面留言：</view>
            <view class="dzui-cell-body">
                <input value="{{customInfo.covertext}}" bindinput="input" bindblur="input" data-store="customInfo.covertext" />
            </view>
        </view>
    </view>
    <view class="dzui-cells details">
        <view class="dzui-cell">
            <view class="dzui-cell-head">单价：</view>
            <view class="dzui-cells-body"><text class="unit-price">{{unitPrice}}</text><text>元</text></view>
        </view>
        <view class="dzui-cell">
            <view class="dzui-cell-head">数量：</view>
            <view class="dzui-cells-body"><wxc-counter class="counter" number="{{customInfo.count || 1}}" max="{{10000}}" min="1" bind:changenumber="onCounterChange"></wxc-counter></view>
        </view>
        <view class="dzui-cell">
            <view class="dzui-cell-head">定制总价（不含运费）：</view>
            <view class="dzui-cells-body"><text class="total-price">{{totalPrice}}</text><text>元</text></view>
        </view>
    </view>
    <wxc-flex class="custom-toolbar">
        <button type="primary" size="bigger" @tap="onReset()">重新定制</button>
        <button type="base" size="bigger" @tap="onSubmit()">加入购物车</button>
        <!-- <button type="base" size="bigger" @tap="onSubmit()">提交订单</button> -->
    </wxc-flex>
    <ctselector :datalist.sync="currentList" :checked.sync="currentData" @on-submit.user="onSelectorSubmit"></ctselector>
</block>
<loadmore wx:else></loadmore>
</template>
<style lang="less">
@import 'src/common/styles/config.less';
.dzui-cell {
    margin: 0;
}

.dzui-cells {
    background-color: @color-maincolor;
}

.dzui-cells-head {
    padding: @margin 0;
    margin-bottom: 0;
    border-bottom: 2rpx dashed @color-border;
}

.dzui-cells-lead {
    padding: @margin 0;
    font-size: @font-size-small;
}

.custom-head {
    padding: @margin;
}

.custom-title {
    font-weight: 700;
    font-size: @font-size-large;
    margin-bottom: @margin/2;
    .number {
        margin: 0 @margin/2;
        font-size: 60rpx;
        color: @color-success;
    }
}

.custom-tips {
    padding: @margin 0;
    font-size: @font-size-small;
    border-top: 2rpx dashed @color-border;
}

.custom-contain {
    background-color: @color-maincolor;
}

.custom-toolbar {
    padding: @margin*2;
    button {
        flex: 1;
        margin-left: @margin;
        margin-right: @margin;
        padding-left: 0.5em;
        padding-right: 0.5em;
        &:first-child {
            margin-left: 0;
        }
    }
}

.custom-list {
    &:after {
        visibility: hidden;
        display: block;
        font-size: 0;
        content: " ";
        clear: both;
        height: 0;
    }
}

.custom-product {
    float: left;
    width: (750rpx - @margin*3) / 2;
    margin-top: @margin;
    margin-right: @margin;
    position: relative;
    radio,
    checkbox {
        display: none;
    }
    &:nth-child(1),
    &:nth-child(2) {
        margin-top: 0;
    }
    &:nth-child(2n) {
        margin-right: 0;
    }
    .checkbox {
        
        width: 50rpx;
        height: 50rpx;
        line-height: 50rpx;

        display: flex;
        justify-content: center;
        text-align: center;
        
        position: absolute;
        left: 5rpx;
        top: 5rpx;

        border-radius: @radius;
        background-color: rgba(255,255,255,.8);
        font-size: 48rpx;
    }
}

.custom-product-cover {
    width: (750rpx - @margin*3) / 2;
    height: (750rpx - @margin*3) / 2;
    margin-bottom: @margin;
    background-color: @color-forecolor;
}

.custom-product-tips {
    color: @color-primary;
}

.material {
    padding: @margin;
    .dzui-cells-head{
        flex-direction: column;
        align-items: stretch;
    }
}

.attribute {}

.details{
    padding: @margin;
    .dzui-cell{
        padding: @margin/2;
        &:before{ display: none;}
    }
    .unit-price{
        font-size: @font-size-large;
        font-weight: 700;
    }
    .total-price{
        font-size: @font-size-biggest;
        color: @color-success;
        font-weight: 700;
    }
}

</style>
