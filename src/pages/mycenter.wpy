
<script>
import wepy from 'wepy'
import utils from '@/utils'
import api from '@/utils/api'
import tabbar from '@/components/tabbar'
import loadmore from '@/components/loadmore'
import nulldata from '@/components/nulldata'

export default class MyCenter extends wepy.page {
    config = {
        usingComponents: {
            'wxc-cc': '/packages/@minui/wxc-cc/dist/index',
            'wxc-flex': '/packages/@minui/wxc-flex/dist/index',
            'wxc-avatar': '/packages/@minui/wxc-avatar/dist/index',
            'wxc-elip': '/packages/@minui/wxc-elip/dist/index',
            'wxc-icon': '/packages/@minui/wxc-icon/dist/index',
            'wxc-label': '/packages/@minui/wxc-label/dist/index',
            'wxc-loadmore': '/packages/@minui/wxc-loadmore/dist/index',

            'wxc-abnor': '/packages/@minui/wxc-abnor/dist/index',
            'wxc-countdown': '/packages/@minui/wxc-countdown/dist/index',
            'wxc-counter': '/packages/@minui/wxc-counter/dist/index',
            'wxc-loading': '/packages/@minui/wxc-loading/dist/index',
            'wxc-mask': '/packages/@minui/wxc-mask/dist/index',

            'wxc-dialog': '/packages/@minui/wxc-dialog/dist/index',
            'wxc-popup': '/packages/@minui/wxc-popup/dist/index',
            'wxc-toast': '/packages/@minui/wxc-toast/dist/index'
        },
        enablePullDownRefresh: true
    }

    components = {
        tabbar,
        loadmore,
        nulldata
    }

    mixins = []

    data = {
        preloaded:false,
        userInfo: {},
        orderTypes: null,
        activeKey: 0
    }

    async getInitialData() {
        await utils.request(api.order.statistics).then(({result}) => {
            try{
                this.orderTypes = result;
            }catch(e){}
            this.$apply();
        }).catch(e=>{});

        this.$apply();

    }

    async onPullDownRefresh() {
        //下拉刷新数据
        console.log('下拉刷新数据');
        await this.getInitialData();
        wepy.stopPullDownRefresh();
    }

    async onLoad() {
        await this.getInitialData();
        let { userInfo } = await utils.getUserInfo();
        this.userInfo = userInfo;
        this.preloaded = true;
        this.$apply();
    }
}

</script>

<template>
<view class="mycenter" wx:if="{{preloaded}}">
    <view class="header">
        <wxc-cc>
            <view class="user-info">
                <view class="user-avatar">
                    <wxc-avatar src="{{userInfo.avatarUrl}}"></wxc-avatar>
                </view>
                <view class="user-name">
                    <text>{{userInfo.nickName}}</text>
                </view>
            </view>
        </wxc-cc>
    </view>
    <tabbar class="tabbar" badge="count" :datalist.sync="orderTypes" alive="false" fixed="false" flex="true" route="/pages/order/list"></tabbar>
    <wxc-flex class="menu" main="around">
        <navigator class="normal" url="/pages/shopcart" open-type="switchTab">
            <text class="icon icon-shopcart"></text>
            <text class="text">购物车</text>
        </navigator>
        <navigator class="normal" url="/pages/consignee/list">
            <text class="icon icon-location"></text>
            <text class="text">收货地址</text>
        </navigator>
        <navigator class="normal" url="/pages/help/faq">
            <text class="icon icon-question"></text>
            <text class="text">常见问题</text>
        </navigator>
    </wxc-flex>
</view>
<loadmore wx:else></loadmore>
</template>

<style lang="less">
@import 'src/common/styles/config.less';
.header{
    padding: 60rpx;
    text-align: center;
    background-color: @color-base;
    .user-avatar{
        width: 170rpx;
        height: 170rpx;
        overflow: hidden;
        background-color: @color-white;
        border: 5rpx solid @color-white;
        border-radius: 50%;
    }
    .user-name{
        margin-top: @margin;
        font-size: @font-size-bigger;
        color: @color-invert;
    }
}
.tabbar{
    background: @color-maincolor;
    .tabbar-scroll{
        background: @color-maincolor;
    }
}
.menu{
    display: block;
    padding: 60rpx;
    margin-top: @margin;
    background-color: @color-maincolor;
    .menu-button{
        padding: @margin;
    }
    .icon, .text{
        display: block;
        text-align: center;
    }
    .icon{
        font-size: 64rpx;
        margin-bottom: @margin;
    }
}
</style>
